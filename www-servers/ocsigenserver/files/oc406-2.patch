commit b72e004cf1bab89f503d58e7a9b554523f69b389
Author: Guillaume Huysmans <ghuysmans99@gmail.com>
Date:   Fri Dec 22 14:57:27 2017 +0100

    StringStream -> BytesStream

diff --git a/src/baselib/ocsigen_stream.ml b/src/baselib/ocsigen_stream.ml
index 1fc6a253..7d0fa286 100644
--- a/src/baselib/ocsigen_stream.ml
+++ b/src/baselib/ocsigen_stream.ml
@@ -265,17 +265,17 @@ let to_lwt_stream o_stream =
       Lwt.return (Some value)
   in Lwt_stream.from wrap
 
-module StringStream = struct
+module BytesStream = struct
 
-  type out = string t
-  type m = (string stream -> string step Lwt.t) Lazy.t
+  type out = bytes t
+  type m = (bytes stream -> bytes step Lwt.t) Lazy.t
 
   let empty : m = lazy (fun c -> Lazy.force c)
   let concat (m: m) (f: m) : m =
     lazy (fun c -> Lazy.force m (lazy (Lazy.force f c)))
-  let put (s : string) : m = lazy (fun c -> Lwt.return (Cont (s, c)))
+  let put (s : bytes) : m = lazy (fun c -> Lwt.return (Cont (s, c)))
 
-  let make_stream (m: m) : string stream =
+  let make_stream (m: m) : bytes stream =
     lazy (Lazy.force m (lazy (Lwt.return (Finished None))))
 
   let make (m: m) : out = make (fun () -> Lazy.force (make_stream m))
diff --git a/src/baselib/ocsigen_stream.mli b/src/baselib/ocsigen_stream.mli
index 0a3cbe55..d69a8179 100644
--- a/src/baselib/ocsigen_stream.mli
+++ b/src/baselib/ocsigen_stream.mli
@@ -123,10 +123,10 @@ val of_lwt_stream : 'a Lwt_stream.t -> 'a t
 *)
 val to_lwt_stream : 'a t -> 'a Lwt_stream.t
 
-module StringStream : sig
+module BytesStream : sig
 
   (** Interface for stream creation (for tyxml) *)
-  type out = string t
+  type out = bytes t
   type m
 
   val make: m -> out
@@ -135,7 +135,7 @@ module StringStream : sig
   val empty: m
 
   (** Create a stream with one element *)
-  val put: string -> m
+  val put: bytes -> m
 
   (** Concatenate two stream *)
   val concat: m -> m -> m
