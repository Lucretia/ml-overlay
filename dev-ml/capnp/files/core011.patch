Index: capnp-ocaml-3.2.0/src/benchmark/capnpCatrank.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/benchmark/capnpCatrank.ml
+++ capnp-ocaml-3.2.0/src/benchmark/capnpCatrank.ml
@@ -3,7 +3,7 @@ module CamlBytes = Bytes
 
 module CR = Catrank.Make[@inlined](Capnp.BytesMessage)
 
-open Core_kernel.Std
+open Core_kernel
 
 module TestCase = struct
   type request_t     = CR.Reader.SearchResultList.struct_t
@@ -117,7 +117,7 @@ module TestCase = struct
         }
       done;
 
-      Array.sort scored_results ~cmp:ScoredResult.compare;
+      Array.sort scored_results ~compare:ScoredResult.compare;
 
       let response = CR.Builder.SearchResultList.init_root () in
       let results = CR.Builder.SearchResultList.results_init response num_results in
Index: capnp-ocaml-3.2.0/src/benchmark/capnpEval.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/benchmark/capnpEval.ml
+++ capnp-ocaml-3.2.0/src/benchmark/capnpEval.ml
@@ -1,7 +1,7 @@
 
 module E = Eval.Make[@inlined](Capnp.BytesMessage)
 
-open Core_kernel.Std
+open Core_kernel
 
 module TestCase = struct
   type request_t     = E.Reader.Expression.struct_t
Index: capnp-ocaml-3.2.0/src/benchmark/main.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/benchmark/main.ml
+++ capnp-ocaml-3.2.0/src/benchmark/main.ml
@@ -1,5 +1,5 @@
 
-open Core_kernel.Std
+open Core_kernel
 
 let printf = Printf.printf
 let fprintf = Printf.fprintf
Index: capnp-ocaml-3.2.0/src/compiler/defaults.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/compiler/defaults.ml
+++ capnp-ocaml-3.2.0/src/compiler/defaults.ml
@@ -55,7 +55,7 @@
 (* Workaround for missing Caml.Bytes in Core 112.35.00 *)
 module CamlBytes = Bytes
 
-open Core_kernel.Std
+open Core_kernel
 
 module Copier = Capnp.Runtime.BuilderOps.Make(GenCommon.M)(GenCommon.M)
 module M = GenCommon.M
Index: capnp-ocaml-3.2.0/src/compiler/genCommon.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/compiler/genCommon.ml
+++ capnp-ocaml-3.2.0/src/compiler/genCommon.ml
@@ -28,7 +28,7 @@
  ******************************************************************************)
 
 
-open Core_kernel.Std
+open Core_kernel
 
 module M   = Capnp.RPC.None(Capnp.BytesMessage)
 module PS_ = PluginSchema.Make(M)
Index: capnp-ocaml-3.2.0/src/compiler/genModules.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/compiler/genModules.ml
+++ capnp-ocaml-3.2.0/src/compiler/genModules.ml
@@ -30,7 +30,7 @@
 (* Workaround for missing Caml.Bytes in Core 112.35.00 *)
 module CamlBytes = Bytes
 
-open Core_kernel.Std
+open Core_kernel
 
 module PS        = GenCommon.PS
 module Context   = GenCommon.Context
@@ -1415,7 +1415,7 @@ let rec generate_struct_node ?uq_name ~c
     C.Array.to_list (PS.Node.Struct.fields_get struct_def)
   in
   (* Sorting in reverse code order allows us to avoid a List.rev *)
-  let all_fields = List.sort unsorted_fields ~cmp:(fun x y ->
+  let all_fields = List.sort unsorted_fields ~compare:(fun x y ->
     - (Int.compare (PS.Field.code_order_get x) (PS.Field.code_order_get y)))
   in
   let union_fields, non_union_fields = List.partition_tf all_fields
Index: capnp-ocaml-3.2.0/src/compiler/genSignatures.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/compiler/genSignatures.ml
+++ capnp-ocaml-3.2.0/src/compiler/genSignatures.ml
@@ -28,7 +28,7 @@
  ******************************************************************************)
 
 
-open Core_kernel.Std
+open Core_kernel
 
 module PS      = GenCommon.PS
 module Context = GenCommon.Context
@@ -305,7 +305,7 @@ let generate_struct_node ?uq_name ~conte
     C.Array.to_list (PS.Node.Struct.fields_get struct_def)
   in
   (* Sorting in reverse code order allows us to avoid a List.rev *)
-  let all_fields = List.sort unsorted_fields ~cmp:(fun x y ->
+  let all_fields = List.sort unsorted_fields ~compare:(fun x y ->
     - (Int.compare (PS.Field.code_order_get x) (PS.Field.code_order_get y)))
   in
   let union_fields, non_union_fields = List.partition_tf all_fields
Index: capnp-ocaml-3.2.0/src/compiler/generate.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/compiler/generate.ml
+++ capnp-ocaml-3.2.0/src/compiler/generate.ml
@@ -28,7 +28,7 @@
  ******************************************************************************)
 
 
-open Core_kernel.Std
+open Core_kernel
 
 module PS   = GenCommon.PS
 module C    = Capnp
Index: capnp-ocaml-3.2.0/src/compiler/main.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/compiler/main.ml
+++ capnp-ocaml-3.2.0/src/compiler/main.ml
@@ -28,7 +28,7 @@
  ******************************************************************************)
 
 
-open Core_kernel.Std
+open Core_kernel
 open Capnp
 
 module M  = BytesMessage
Index: capnp-ocaml-3.2.0/src/tests/testCodecs.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/tests/testCodecs.ml
+++ capnp-ocaml-3.2.0/src/tests/testCodecs.ml
@@ -28,7 +28,7 @@
  ******************************************************************************)
 
 module CamlBytes = Bytes
-open Core_kernel.Std
+open Core_kernel
 module Bytes = CamlBytes
 
 open OUnit2
Index: capnp-ocaml-3.2.0/src/tests/testEncoding.ml
===================================================================
--- capnp-ocaml-3.2.0.orig/src/tests/testEncoding.ml
+++ capnp-ocaml-3.2.0/src/tests/testEncoding.ml
@@ -30,7 +30,7 @@
 (* Inspired by encoding-test.c++, as found in the capnproto source. *)
 
 module CamlBytes = Bytes
-open Core_kernel.Std
+open Core_kernel
 module Bytes = CamlBytes
 
 module BM  = Capnp.BytesMessage
